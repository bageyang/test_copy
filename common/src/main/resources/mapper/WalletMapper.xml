<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zj.auction.common.mapper.WalletMapper">
  <resultMap id="BaseResultMap" type="com.zj.auction.common.model.Wallet">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="fund_type" jdbcType="INTEGER" property="fundType" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="freeze" jdbcType="DECIMAL" property="freeze" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="transaction_type" jdbcType="INTEGER" property="transactionType" />
    <result column="balance_before" jdbcType="DECIMAL" property="balanceBefore" />
    <result column="update_balance" jdbcType="DECIMAL" property="updateBalance" />
    <result column="balance_after" jdbcType="DECIMAL" property="balanceAfter" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="wallet_type" jdbcType="INTEGER" property="walletType" />
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, fund_type, balance, freeze, create_time, update_time, transaction_type, 
    balance_before, update_balance, balance_after, remark, wallet_type, trade_no
  </sql>
  <select id="selectByExample" parameterType="com.zj.auction.common.model.example.WalletExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zj_wallet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from zj_wallet
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from zj_wallet
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zj.auction.common.model.example.WalletExample">
    delete from zj_wallet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zj.auction.common.model.Wallet">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into zj_wallet (user_id, fund_type, balance, 
      freeze, create_time, update_time, 
      transaction_type, balance_before, update_balance, 
      balance_after, remark, wallet_type, 
      trade_no)
    values (#{userId,jdbcType=BIGINT}, #{fundType,jdbcType=INTEGER}, #{balance,jdbcType=DECIMAL}, 
      #{freeze,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{transactionType,jdbcType=INTEGER}, #{balanceBefore,jdbcType=DECIMAL}, #{updateBalance,jdbcType=DECIMAL}, 
      #{balanceAfter,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{walletType,jdbcType=INTEGER}, 
      #{tradeNo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zj.auction.common.model.Wallet">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into zj_wallet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="fundType != null">
        fund_type,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="freeze != null">
        freeze,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="transactionType != null">
        transaction_type,
      </if>
      <if test="balanceBefore != null">
        balance_before,
      </if>
      <if test="updateBalance != null">
        update_balance,
      </if>
      <if test="balanceAfter != null">
        balance_after,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="walletType != null">
        wallet_type,
      </if>
      <if test="tradeNo != null">
        trade_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="fundType != null">
        #{fundType,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="freeze != null">
        #{freeze,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transactionType != null">
        #{transactionType,jdbcType=INTEGER},
      </if>
      <if test="balanceBefore != null">
        #{balanceBefore,jdbcType=DECIMAL},
      </if>
      <if test="updateBalance != null">
        #{updateBalance,jdbcType=DECIMAL},
      </if>
      <if test="balanceAfter != null">
        #{balanceAfter,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="walletType != null">
        #{walletType,jdbcType=INTEGER},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zj.auction.common.model.example.WalletExample" resultType="java.lang.Long">
    select count(*) from zj_wallet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update zj_wallet
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.fundType != null">
        fund_type = #{record.fundType,jdbcType=INTEGER},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.freeze != null">
        freeze = #{record.freeze,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.transactionType != null">
        transaction_type = #{record.transactionType,jdbcType=INTEGER},
      </if>
      <if test="record.balanceBefore != null">
        balance_before = #{record.balanceBefore,jdbcType=DECIMAL},
      </if>
      <if test="record.updateBalance != null">
        update_balance = #{record.updateBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.balanceAfter != null">
        balance_after = #{record.balanceAfter,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.walletType != null">
        wallet_type = #{record.walletType,jdbcType=INTEGER},
      </if>
      <if test="record.tradeNo != null">
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update zj_wallet
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      fund_type = #{record.fundType,jdbcType=INTEGER},
      balance = #{record.balance,jdbcType=DECIMAL},
      freeze = #{record.freeze,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      transaction_type = #{record.transactionType,jdbcType=INTEGER},
      balance_before = #{record.balanceBefore,jdbcType=DECIMAL},
      update_balance = #{record.updateBalance,jdbcType=DECIMAL},
      balance_after = #{record.balanceAfter,jdbcType=DECIMAL},
      remark = #{record.remark,jdbcType=VARCHAR},
      wallet_type = #{record.walletType,jdbcType=INTEGER},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zj.auction.common.model.Wallet">
    update zj_wallet
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="fundType != null">
        fund_type = #{fundType,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="freeze != null">
        freeze = #{freeze,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transactionType != null">
        transaction_type = #{transactionType,jdbcType=INTEGER},
      </if>
      <if test="balanceBefore != null">
        balance_before = #{balanceBefore,jdbcType=DECIMAL},
      </if>
      <if test="updateBalance != null">
        update_balance = #{updateBalance,jdbcType=DECIMAL},
      </if>
      <if test="balanceAfter != null">
        balance_after = #{balanceAfter,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="walletType != null">
        wallet_type = #{walletType,jdbcType=INTEGER},
      </if>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zj.auction.common.model.Wallet">
    update zj_wallet
    set user_id = #{userId,jdbcType=BIGINT},
      fund_type = #{fundType,jdbcType=INTEGER},
      balance = #{balance,jdbcType=DECIMAL},
      freeze = #{freeze,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      transaction_type = #{transactionType,jdbcType=INTEGER},
      balance_before = #{balanceBefore,jdbcType=DECIMAL},
      update_balance = #{updateBalance,jdbcType=DECIMAL},
      balance_after = #{balanceAfter,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      wallet_type = #{walletType,jdbcType=INTEGER},
      trade_no = #{tradeNo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>