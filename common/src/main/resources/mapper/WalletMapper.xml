<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zj.auction.common.mapper.WalletMapper">
  <resultMap id="BaseResultMap" type="com.zj.auction.common.model.Wallet">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="fund_type" jdbcType="INTEGER" property="fundType" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="freeze" jdbcType="DECIMAL" property="freeze" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, fund_type, balance, freeze, create_time, update_time
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from zj_wallet
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from zj_wallet
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.zj.auction.common.model.Wallet">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into zj_wallet (user_id, fund_type, balance, 
      freeze, create_time, update_time)
    values (#{userId,jdbcType=BIGINT}, #{fundType,jdbcType=INTEGER}, #{balance,jdbcType=DECIMAL}, 
      #{freeze,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.zj.auction.common.model.Wallet">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into zj_wallet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="fundType != null">
        fund_type,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="freeze != null">
        freeze,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="fundType != null">
        #{fundType,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="freeze != null">
        #{freeze,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.zj.auction.common.model.Wallet">
    update zj_wallet
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="fundType != null">
        fund_type = #{fundType,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="freeze != null">
        freeze = #{freeze,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zj.auction.common.model.Wallet">
    update zj_wallet
    set user_id = #{userId,jdbcType=BIGINT},
      fund_type = #{fundType,jdbcType=INTEGER},
      balance = #{balance,jdbcType=DECIMAL},
      freeze = #{freeze,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="incrementUserBalance">
    update zj_wallet
    set balance = balance + #{changeNum,jdbcType=DECIMAL}
    where id = #{id} and balance = #{changeBefore}
  </update>
  <update id="decrementUserBalance">
    update zj_wallet
    set balance = balance - #{changeNum,jdbcType=DECIMAL}
    where id = #{id} and balance = #{changeBefore}
  </update>
  <select id="selectAllByUserId" parameterType="long" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from  zj_wallet where user_id =#{userId}
  </select>
  <select id="selectWalletByUserIdAndType" resultMap="BaseResultMap">
    select
        <include refid="Base_Column_List"/>
    from zj_wallet
    where user_id =#{userId} and fund_type = #{fundType}
  </select>
</mapper>